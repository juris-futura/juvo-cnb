---
name: Release with Pandoc

on:
  push:
    tags: "*"

concurrency:
  group: release-pandoc-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    uses: ./.github/workflows/ci.yml
    secrets: inherit
    permissions:
      contents: write

  build:
    needs: test
    permissions:
      contents: write
      packages: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log In to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Pack (CNCF)
        run: |
          sudo add-apt-repository ppa:cncf-buildpacks/pack-cli
          sudo apt update
          sudo apt -y install pack-cli

      - name: Build And Push Builder Components
        run: |
          # Build pandoc version
          for TARGET in build run; do
            ARTIFACT="ghcr.io/${{ github.repository_owner }}/juvo-poetry-$TARGET-pandoc:${{ github.ref_name }}"
            docker buildx build . \
              --build-arg INSTALL_PANDOC=true \
              -t $ARTIFACT \
              --target $TARGET \
              --push
          done
        working-directory: ${{ github.workspace }}/cnb-components/builders/juvo-builder/

      - name: Create Builder Config File
        run: |
          cat <<EOF > builder-pandoc.toml
          [build]
          image = "ghcr.io/${{ github.repository_owner }}/juvo-poetry-build-pandoc:${{ github.ref_name }}"

          [run]
          [[run.images]]
          image = "ghcr.io/${{ github.repository_owner }}/juvo-poetry-run-pandoc:${{ github.ref_name }}"
          EOF
        working-directory: ${{ github.workspace }}/cnb-components/builders/juvo-builder/

      - name: Pack and Push Builder
        run: |
          pack builder create $BUILDER_IMAGE --config builder.toml --publish
        working-directory: ${{ github.workspace }}/cnb-components/builders/juvo-builder/
        env:
          BUILDER_IMAGE: "ghcr.io/${{ github.repository_owner }}/juvo-poetry-builder:${{ github.ref_name }}"

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: cnb-components/buildpacks/juvo-poetry-buildpack/go.mod

      - name: Build binaries
        run: |
          for BIN in detect build; do
           go build $@ -ldflags="-s -w" -o ./bin/$BIN ./cmd/$BIN/main.go
          done
        working-directory: ${{ github.workspace }}/cnb-components/buildpacks/juvo-poetry-buildpack/
        env:
          GOOS: linux

      - name: Create buildpack package
        run: tar czf package/juvo-poetry-buildpack-pandoc.tar.gz bin buildpack.toml
        working-directory: ${{ github.workspace }}/cnb-components/buildpacks/juvo-poetry-buildpack/

      - name: Copy buildpack package
        run: cp "${{ github.workspace }}/cnb-components/buildpacks/juvo-poetry-buildpack/package/juvo-poetry-buildpack-pandoc.tar.gz" .

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "juvo-poetry-buildpack-pandoc.tar.gz"

